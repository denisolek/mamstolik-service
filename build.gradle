buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
        kotlin_version = '1.1.3+'
        jackson_version = '2.9.0'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'docker'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'mamstolik/service'
    addFile {
        from jar
        rename { 'app.jar' }
    }
    setEnvironment('DOCKERIZE_VERSION', 'v0.5.0')
    runCommand "apk update && apk add ca-certificates && update-ca-certificates && apk add openssl"
    runCommand "wget https://github.com/jwilder/dockerize/releases/download/v0.5.0/dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
    runCommand "tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
    runCommand "rm dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
}

buildDocker.dependsOn(build)

version = '0.42.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.4.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '1.5.4.RELEASE'
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.1.1.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-amqp")
    runtime('org.springframework.boot:spring-boot-devtools')

    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-core"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.10.Final'
    runtime('org.postgresql:postgresql')

    compileOnly('org.projectlombok:lombok')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'

    compile group: 'org.zalando', name: 'logbook-core', version: '1.5.0'
    compile group: 'org.zalando', name: 'logbook-spring-boot-starter', version: '1.5.0'
    compile group: 'org.zalando', name: 'logbook-servlet', version: '1.5.0'
    compile group: 'org.zalando', name: 'logbook-httpclient', version: '1.5.0'
    compile('net.logstash.logback:logstash-logback-encoder:4.9')

    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.2.0'
}

dependencies {
    testCompile('org.springframework.security:spring-security-test')
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('junit:junit:4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
}